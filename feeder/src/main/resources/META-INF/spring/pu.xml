<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.2/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/10.2/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/10.2/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/10.2/sla/openspaces-sla.xsd">


	<!-- Spring property configured which allows us to use system properties 
		(such as user.name). -->
	<bean id="propertiesConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties">
			<props>
				<prop key="numberOfTypes">100</prop>
			</props>
		</property>
	</bean>
	
	<!-- A bean representing a space (an IJSpace implementation). Note, we perform 
		a lookup on the space since we are working against a remote space. -->
	<os-core:space id="settlementSpace" url="jini://*/*/settlementSpace"/>	

	<!-- OpenSpaces simplified space API built on top of IJSpace/JavaSpace. -->
	<os-core:giga-space id="gigaSpace" space="settlementSpace" />
	
	<!--  used to expose remote executor -->
	<os-core:space id="feederSpace" url="/./feederSpace"/>
	<os-core:giga-space id="feederGigaSpace" space="feederSpace" />
	
	<!-- Annotations -->
	<context:component-scan base-package="com.gigaspaces.settlement" />
	<context:annotation-config />

	<!-- Enables the usage of @GigaSpaceContext annotation based injection. -->
	<os-core:giga-space-context />

	<!-- Support the @RemotingService annotation on a service -->
	<os-remoting:annotation-support />
	<os-core:annotation-support />
	<os-events:annotation-support />
	
	<os-remoting:service-exporter id="serviceExporter" />

	<!-- The Data feeder bean, writing new Data objects to the space in a constant 
		interval. -->
	<bean id="dataFeeder" class="com.gigaspaces.settlement.feeder.TradeFeeder"
		depends-on="gigaSpace"/>
	<bean id="optionDataFeeder" class="com.gigaspaces.settlement.feeder.OptionTradeFeeder"
		depends-on="gigaSpace"/>
	
	<!-- <bean id="feederJMXMonitor" class="com.gigaspaces.settlement.feeder.jmx.TradeFeederJMXMonitor"/> -->
	
</beans>